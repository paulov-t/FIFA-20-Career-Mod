{
	"name":"PostMatchFlow"
	,"initial":
	{
		"targets":["ServerResponseCheck"]
	}
	,"transitions":
	[
		{ "event":"evt_online_invite_accepted", "targets":["out_advance"] }
		,{ "event":"evt_ssf_online_disconnect", "targets":["out_disconnect"] }
	]
	,"states":
	[
		{
			"name":"ServerResponseCheck"
			,"onEnter":
			[
				["sendScreenEvent", ["ShowBusyIndicator",""]]			
			]
			,"onExit":
			[
				["sendScreenEvent", ["HideBusyIndicator",""]]
			]
			,"states":
			[
				{
					"name":"WaitForServerResponse"
					,"transitions":
					[
						{ "event":"advance", "targets":["PostMatchRewardsFlow"] }
					]
					,"states":
					[
						{
							"let":{"WaitStateParam":"enterPostMatchRewardsFlow"}
							,"name":"FlowReadyWait"
							,"onEnter":
							[						
								["loadView", ["popup", "gameReportWaitPopup", "SSF_WT_WAITING_GAME_REPORT"]]
							]
							,"onExit":
							[
								["unloadView", ["popup", "gameReportWaitPopup"]]
							]
							,"transitions":
							[
							]
							,"states":
							[
								{
									"type":"external"
									,"file":"/utility/waitState.nav"
									,"outputs":
									{
										"out_advance":"ValidResponseCheck"
									}
								}
							]
						}
						,{	
							"let":{"ConditionStateParam":"haveValidPostMatchRewards"}
							,"name":"ValidResponseCheck"
							,"states":
							[
								{
									"type":"external"
									,"file":"/utility/conditionState.nav"
									,"outputs":
									{
										"out_true":"PostMatchRewardsCheck"
										,"out_false":"ServerResponseFailure"
									}
								}
							]
						}
					]
				}
				,{
					"name":"PostMatchRewardsCheck"
					,"onEnter":
					[
						["sendAction", ["condition", "havePostMatchRewardsFlow"]]
					]
					,"transitions":
					[
						{
							"event":"true"
							,"targets":["PostMatchRewardsFlow"]
						}
						,{
							"event":"false"
							,"targets":["PostMatchSquadUpdate"]
						}
					]
				}
			]
		}
		,{
			"name":"PostMatchRewardsFlow"
			,"initial":
			{
				"targets":["PostMatchRewardsScreenFlow"]
			}
			,"onEnter":
			[
				["loadViewModel",["FluxViewModel"]]
				,["loadViewModel",["WorldTourPostMatchRewardsViewModel"]]
				,["loadView",["screen", "game/screens/fluxHub/FluxHub"]]
				,["sendAction", ["fbStartFlowEvent", "EnterAvatarCustomization"]]	/* Places camera on a fixed position */
			]
			,"onExit":
			[
				["unloadView",["screen", "game/screens/fluxHub/FluxHub"]]
				,["unloadViewModel",["WorldTourPostMatchRewardsViewModel"]]
				,["unloadViewModel",["FluxViewModel"]]
				,["sendAction", ["fbStartFlowEvent", "ExitAvatarCustomization"]]		/* Resume background camera animation */
			]
			,"states":
			[
				{
					"name":"PostMatchRewardsScreenFlow"
					,"transitions":
					[
						{
							"event":"enterPlayerRecruit"
							,"targets":["fadePlayerRecruit"]
						}
						,{
							"event":"adaptiveDifficultyUpPopup"
							,"actions":[ ["sendAction",["adaptiveDifficultyUpPopup"]] ]
						}
						,{
							"event":"adaptiveDifficultyDownPopup"
							,"actions":[ ["sendAction",["adaptiveDifficultyDownPopup"]] ]
						}
						,{
							"event":"exit"
							,"targets":["fadeExit"]
						}
					]
				}				
				,{
					"let":{"WaitStateParam":"fadeOut"}
					,"name":"fadePlayerRecruit"
					,"states":
					[
						{
							"type":"external"
							,"file":"/utility/waitState.nav"
							,"outputs":
							{
								"out_advance":"PlayerRecruitFlow"
							}
						}
					]
				}
				,{
					"let":{"WaitStateParam":"fadeOut"}
					,"name":"fadeExit"
					,"states":
					[
						{
							"type":"external"
							,"file":"/utility/waitState.nav"
							,"outputs":
							{
								"out_advance":"ExitPostMatchFlow"
							}
						}
					]
				}
			]
		}
		,{
			"type":"external"
			,"file":"/worldtour/worldTourPlayerRecruitFlow.nav"
			,"inputs":
			{
				"PlayerRecruitFlow":"PlayerRecruitFlow"
			}
			,"outputs":
			{
				"out_back":"ExitPostMatchFlow"
				,"out_fail":"PostMatchSquadUpdate"
				,"out_success":"InitializeServicesWithMatchEndData"
			}
		}
		,{
			"name":"ExitPostMatchFlow"
			,"initial":
			{
				"targets":["SkipRecruitPlayer"]
			}
			,"states":
			[
				{
					"name":"SkipRecruitPlayer"
					,"onEnter":
					[
						["sendAction", ["notify", "skipRecruitPlayer"]]
						,["invoke", ["continue"]]
					]
					,"transitions":
					[
						{"event":"continue", "targets":["PostMatchSquadUpdate"]}
					]
				}
				,{
					"name":"PostMatchSquadUpdate"
					,"initial":
					{
						"targets":["SquadUpdateCheck"]
					}
					,"states":
					[
						{
							"let":{"ConditionStateParam":"postMatchSquadUpdatesRequired"}
							,"name":"SquadUpdateCheck"
							,"states":
							[
								{
									"type":"external"
									,"file":"/utility/conditionState.nav"
									,"outputs":
									{
										"out_true":"UpdateSquads"
										,"out_false":"InitializeServicesWithMatchEndData"
									}
								}
							]
						}
						,{
							"name":"UpdateSquads"
							,"onEnter":
							[
								["sendAction", ["notify", "getSquadListFromServer"]]
								,["loadView", ["popup", "SsfGetSquadList", "TXT_UPDATE_SQUAD"]]
							]
							,"onExit":
							[
								 ["unloadView", ["popup", "SsfGetSquadList"]]					
							]
							,"transitions":
							[
								{
									"event":"squad_get_success"
									,"targets":["InitializeServicesWithMatchEndData"]
								}
								,{
									"event":"squad_get_fail"
									,"targets":["ServerResponseFailure"]
								}
							]
						}
					]
				}
				,{
					"name":"InitializeServicesWithMatchEndData"
					,"onEnter":
					[
						["sendAction", ["notify", "initializeServicesWithMatchEndData"]]
						,["sendAction", ["smScenePrime"]]
					]
					,"states":
					[
						{
							"onEnter":
							[
								["sendScreenEvent", ["ShowBusyIndicator",""]]			
							]
							,"onExit":
							[
								["sendScreenEvent", ["HideBusyIndicator",""]]
							]
							,"transitions":
							[
								{
									"event":"success"
									,"targets":["out_advance"]
								}
								,{
									"event":"failure"
									,"targets":["ServerResponseFailure"]
								}
							]
						}
					]
				}
				,{
					"name":"ServerResponseFailure"
					,"states":
					[	
						{
							"onEnter":
							[						
								["loadView", ["popup", "FAILED_TO_END_MATCH_POPUP", "SSF_WT_MATCH_END_FAILURE|OkayButton|advance"]]
							]
							,"onExit":
							[
								["unloadView", ["popup", "FAILED_TO_END_MATCH_POPUP"]]
							]
							,"transitions":
							[
								{ "event":"advance", "targets":["out_error"] }
							]
						}
					]
				}
			]
		}
	]
}